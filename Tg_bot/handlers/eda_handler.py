import os
import pandas as pd
from telegram import Message


async def get_eda_analysis(message: Message):
    csv_path = os.path.join("data", "data.csv")

    if not os.path.exists(csv_path):
        await message.reply_text(
            "‚ùå CSV —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ."
        )
        return

    try:
        df = pd.read_csv(csv_path, sep=",", engine="python")

        if "–¶–µ–Ω–∞" not in df.columns:
            await message.reply_text("‚ùå –ö–æ–ª–æ–Ω–∫–∞ '–¶–µ–Ω–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ CSV —Ñ–∞–π–ª–µ.")
            return

        try:
            desc = df.describe().to_dict()
        except Exception:
            desc = {}

        report = "üìä **EDA –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö**\n\n"
        report += f"üìà –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} –∫–æ–ª–æ–Ω–æ–∫\n\n"
        report += f"üìã –ö–æ–ª–æ–Ω–∫–∏: {', '.join(list(df.columns))}\n\n"

        if desc:
            report += "üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —á–∏—Å–ª–æ–≤—ã–º –∫–æ–ª–æ–Ω–∫–∞–º:**\n"
            for col in desc:
                report += f"\n**{col}**\n"
                report += f"‚îú –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {desc[col].get('count', 0):.0f}\n"
                report += f"‚îú –°—Ä–µ–¥–Ω–µ–µ: {desc[col].get('mean', 0):.3f}\n"
                report += f"‚îú –°—Ç–∞–Ω–¥.–æ—Ç–∫–ª.: {desc[col].get('std', 0):.3f}\n"
                report += f"‚îú –ú–∏–Ω–∏–º—É–º: {desc[col].get('min', 0):.3f}\n"
                report += f"‚îú 25%: {desc[col].get('25%', 0):.3f}\n"
                report += f"‚îú –ú–µ–¥–∏–∞–Ω–∞: {desc[col].get('50%', 0):.3f}\n"
                report += f"‚îú 75%: {desc[col].get('75%', 0):.3f}\n"
                report += f"‚îî –ú–∞–∫—Å–∏–º—É–º: {desc[col].get('max', 0):.3f}\n"

        missing = df.isnull().sum()
        if missing.sum() > 0:
            report += "\n‚ö†Ô∏è **–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:**\n"
            for col, count in missing[missing > 0].items():
                report += f"‚Ä¢ {col}: {count} ({count/len(df)*100:.1f}%)\n"

        if len(report) > 4096:
            for i in range(0, len(report), 4096):
                await message.reply_text(report[i : i + 4096], parse_mode="Markdown")
        else:
            await message.reply_text(report, parse_mode="Markdown")

    except Exception as e:
        await message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
