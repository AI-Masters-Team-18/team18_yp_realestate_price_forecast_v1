from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! üëã")
    await show_main_menu(update)


async def show_main_menu(update: Update):
    keyboard = [
        [InlineKeyboardButton("üìä –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="upload_data")],
        [InlineKeyboardButton("üìà –ü–æ–ª—É—á–∏—Ç—å EDA", callback_data="get_eda")],
        [InlineKeyboardButton("ü§ñ –û–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å", callback_data="train_model")],
        [
            InlineKeyboardButton(
                "üí∞ –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="predict_price"
            )
        ],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.message:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
    else:
        await update.callback_query.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup
        )


async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    from handlers.upload_handler import WAITING_CSV
    from handlers.predict_handler import ASKING_DISTANCE, user_data
    from handlers.eda_handler import get_eda_analysis
    from handlers.train_handler import train_model

    query = update.callback_query
    await query.answer()

    if query.data == "upload_data":
        await query.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ CSV —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏.")
        return WAITING_CSV

    elif query.data == "get_eda":
        await get_eda_analysis(query.message)
        await show_main_menu(update)

    elif query.data == "train_model":
        await train_model(query.message)
        await show_main_menu(update)

    elif query.data == "predict_price":
        user_id = query.from_user.id
        user_data[user_id] = {}
        await query.message.reply_text(
            "–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏.\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–æ —Ü–µ–Ω—Ç—Ä–∞ (–≤ –∫–º).\n"
            "–í–≤–µ–¥–∏—Ç–µ 0 –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞."
        )
        return ASKING_DISTANCE
